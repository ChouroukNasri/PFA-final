pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    docker.build('positionsimulator:latest')
                }
            }
        }
        stage('Code Quality') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar'
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    docker.withRegistry('https://your.docker.registry', 'docker-credentials') {
                        docker.image('positionsimulator:latest').push()
                    }
                }
            }
        }
    }
}
